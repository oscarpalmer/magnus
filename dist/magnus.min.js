/*!
 * Magnus, v0.4.0
 * https://github.com/oscarpalmer/magnus
 * (c) Oscar PalmÃ©r, 2021, MIT @license
 */
var Magnus=function(){"use strict";class Observer{constructor(t,e){this.identifier=t,this.element=e,this.attributeAction=`data-${this.identifier}-action`,this.attributeTarget=`data-${this.identifier}-target`,this.mutationOptions=this.getOptions(),this.mutationObserver=new MutationObserver(this.observeMutations.bind(this))}disconnect(){this.mutationObserver.disconnect()}handleNodes(t,e){if(null!=t&&t.length>0)for(const s of t)s.nodeType===Node.ELEMENT_NODE&&(this.handleElement(s,e),this.handleNodes(s.childNodes,e))}observe(){this.mutationObserver.observe(this.element,Observer.MUTATION_OBSERVER_OPTIONS)}getAttributes(t,e){const s=t.split(" "),r=e.split(" "),n=[],i=[];for(const t of s)""!==t&&-1===r.indexOf(t)&&i.push(t);for(const t of r)""!==t&&-1===s.indexOf(t)&&n.push(t);return[n,i]}getOptions(){const t=Observer.MUTATION_OBSERVER_OPTIONS;return this.element===document.documentElement?(t.attributeFilter=[Observer.CONTROLLER_ATTRIBUTE],t):(t.attributeFilter=[this.attributeAction,this.attributeTarget],t)}observeMutations(t){var e,s;for(const r of t)r.type===Observer.MUTATION_RECORD_CHILDLIST?(this.handleNodes(r.addedNodes,!0),this.handleNodes(r.removedNodes,!1)):this.handleAttribute(r.target,null!==(e=r.attributeName)&&void 0!==e?e:"",null!==(s=r.oldValue)&&void 0!==s?s:"")}}Observer.CONTROLLER_ATTRIBUTE="data-controller",Observer.MUTATION_OBSERVER_OPTIONS={attributeOldValue:!0,attributes:!0,childList:!0,subtree:!0},Observer.MUTATION_RECORD_CHILDLIST="childList";class ControllerObserver extends Observer{constructor(t,e){super(t.identifier,t.element),this.controller=t,this.store=e}handleAttribute(t,e,s,r){var n;let i=null!==(n=t.getAttribute(e))&&void 0!==n?n:"";if(i===s)return;!0===r&&(s=i,i="");const o=e===this.attributeAction?this.handleAction:this.handleTarget;this.handleAttributeChanges(t,s,i,o)}handleElement(t,e){t.hasAttribute(this.attributeAction)&&this.handleAttribute(t,this.attributeAction,"",!e),t.hasAttribute(this.attributeTarget)&&this.handleAttribute(t,this.attributeTarget,"",!e)}handleAction(t,e,s){if(this.store.hasAction(e))return void(s?this.store.addAction(e,t):this.store.removeAction(e,t));if(!s)return;const r=e.split(":");if(r.length<2)return;const n=this.controller[r[1]];"function"==typeof n&&(this.store.createAction(e,r[0],n.bind(this.controller)),this.store.addAction(e,t))}handleAttributeChanges(t,e,s,r){const n=this.getAttributes(e,s);for(let e=0;e<n.length;e+=1)this.toggleAttributes(t,n[e],r,0===e)}handleTarget(t,e,s){s?this.store.addElement(e,t):this.store.removeElement(e,t)}toggleAttributes(t,e,s,r){for(const n of e)s.call(this,t,n,r)}}class Store{constructor(){this.actions=new Map,this.elements=new Map}addAction(t,e){const s=this.actions.get(t);null!=s&&(s.elements.add(e),e.addEventListener(s.type,s.callback))}addElement(t,e){var s,r;this.elements.has(t)?null===(s=this.elements.get(t))||void 0===s||s.add(e):null===(r=this.elements.set(t,new Set).get(t))||void 0===r||r.add(e)}createAction(t,e,s){this.actions.has(t)||this.actions.set(t,{callback:s,elements:new Set,type:e})}getElements(t){const e=this.elements.get(t);return null!=e?Array.from(e):[]}hasAction(t){return this.actions.has(t)}removeAction(t,e){const s=this.actions.get(t);null!=s&&(e.removeEventListener(s.type,s.callback),s.elements.delete(e),0===s.elements.size&&this.actions.delete(t))}removeElement(t,e){var s,r;this.elements.has(t)&&(null===(s=this.elements.get(t))||void 0===s||s.delete(e),0===(null===(r=this.elements.get(t))||void 0===r?void 0:r.size)&&this.elements.delete(t))}}class DocumentObserver extends Observer{constructor(t){super("magnus",document.documentElement),this.controllers=t}handleAttribute(t,e,s){var r;const n=null!==(r=t.getAttribute(e))&&void 0!==r?r:"";e===Observer.CONTROLLER_ATTRIBUTE&&n!==s&&this.handleControllerChanges(t,e,n,s)}handleElement(t,e){var s;if(!t.hasAttribute(Observer.CONTROLLER_ATTRIBUTE))return;const r=(null!==(s=t.getAttribute(Observer.CONTROLLER_ATTRIBUTE))&&void 0!==s?s:"").split(" ");this.toggleAttributes(t,r,e)}addControllerToElement(t,e){if(this.controllers.has(e)&&null==t[e]){const s=this.controllers.get(e);null!=s&&(t[e]=new s(e,t))}}handleControllerChanges(t,e,s,r){const n=this.getAttributes(r,s);for(let e=0;e<n.length;e+=1)this.toggleAttributes(t,n[e],0===e)}removeControllerFromElement(t,e){const s=t[e];null!=s&&(s.observer.disconnect(),delete t[e])}toggleAttributes(t,e,s){for(const r of e)s?this.addControllerToElement(t,r):this.removeControllerFromElement(t,r)}}class Magnus{constructor(){this.controllers=new Map,this.observer=new DocumentObserver(this.controllers)}add(t,e){this.controllers.set(t,e)}start(){this.observer.observe(),this.observer.handleNodes(document.documentElement.childNodes,!0)}stop(){this.observer.disconnect()}}return Magnus.Controller=class Controller{constructor(t,e){this.identifier=t,this.element=e,this.store=new Store,this.observer=new ControllerObserver(this,this.store),this.observer.observe(),this.observer.handleNodes(this.element.childNodes,!0)}elements(t){return this.store.getElements(t)}},Magnus}();