/*!
 * Magnus, v0.3.0
 * https://github.com/oscarpalmer/magnus
 * (c) Oscar PalmÃ©r, 2021, MIT @license
 */
var Magnus=function(){"use strict";class Observer{constructor(t,e,s){this.identifier=t,this.element=e,this.store=s,this.attributeAction=`data-${this.identifier}-action`,this.attributeTarget=`data-${this.identifier}-target`,this.mutationOptions=Observer.MUTATION_OBSERVER_OPTIONS,this.mutationOptions.attributeFilter=[this.attributeAction,this.attributeTarget],this.mutationObserver=new MutationObserver(this.observeMutations.bind(this))}disconnect(){this.mutationObserver.disconnect()}handleNodes(t,e){if(null!=t&&0!==t.length)for(const s of t){if(s.nodeType!==Node.ELEMENT_NODE)continue;const t=s;e&&t.hasAttribute(this.attributeAction)&&this.handleAction(t),t.hasAttribute(this.attributeTarget)&&this.handleTarget(t,e),this.handleNodes(t.childNodes,e)}}observe(){this.mutationObserver.observe(this.element,Observer.MUTATION_OBSERVER_OPTIONS)}handleAction(t){var e;(null!==(e=t.getAttribute(this.attributeAction))&&void 0!==e?e:"").split(" ").forEach((e=>{const s=e.split(":");if(s.length<2)return;const i=this.store.actions.get(s[1]);"function"==typeof i&&t.addEventListener(s[0],i)}))}handleTarget(t,e){var s;(null!==(s=t.getAttribute(this.attributeTarget))&&void 0!==s?s:"").split(" ").forEach((s=>{e?this.store.addElement(s,t):this.store.removeElement(s,t)}))}observeMutations(t){for(const e of t)this.handleNodes(e.addedNodes,!0),this.handleNodes(e.removedNodes,!1)}}Observer.MUTATION_OBSERVER_OPTIONS={attributeOldValue:!0,attributes:!0,childList:!0,subtree:!0};class Store{constructor(){this.actions=new Map,this.elements=new Map}addElement(t,e){var s,i;this.elements.has(t)?null===(s=this.elements.get(t))||void 0===s||s.add(e):null===(i=this.elements.set(t,new Set).get(t))||void 0===i||i.add(e)}getElements(t){const e=this.elements.get(t);return null!=e?Array.from(e):[]}removeElement(t,e){var s,i;this.elements.has(t)&&(null===(s=this.elements.get(t))||void 0===s||s.delete(e),0===(null===(i=this.elements.get(t))||void 0===i?void 0:i.size)&&this.elements.delete(t))}}return class Magnus{constructor(){this.store=new Store,this.observer=new Observer("magnus",document.documentElement,this.store)}get actions(){return this.store.actions}start(){this.observer.observe(),this.observer.handleNodes(document.documentElement.childNodes,!0)}stop(){this.observer.disconnect()}targets(t){return this.store.getElements(t)}}}();